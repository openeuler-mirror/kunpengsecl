openapi: 3.0.1
info:
  description: KunpengSecL remote attestation server provides RESTful APIs to manage the trust reports and get the trust status of managed target servers.
  title: KunpengSecL Remote Attestation REST API server
  license:
    name: MulanPSL-2.0
    url: http://license.coscl.org.cn/MulanPSL2
  version: 2.0.2
servers:
  - description: KunpengSecL Remote Attestation REST API server
paths:
  /:
    get:
      description: get a list of briefing info for all servers
      responses:
        '200':
          description: return a list of briefing info for all servers
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerInfo'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerInfo'
  /{id}:
    get:
      description: get a specific server's info
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: return a specific server's info
          content:
            text/plain:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/ServerInfo'
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/ServerInfo'
    post:
      description: modify a specific server's info
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success change a specific server's info
      security:
        - servermgt_oauth2:
          - write:servers
    delete:
      description: delete a specific server
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success delete a specific server
      security:
        - servermgt_oauth2:
          - write:servers
  /{from}/{to}:
    get:
      description: get a specific list of servers' info
      parameters:
        - name: from
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: to
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: a specific server's info
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerInfo'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerInfo'
  /{id}/reports:
    get:
      description: get a specific server's all reports
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: return a specific server's all reports
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportInfo'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportInfo'
  /{id}/reports/{reportid}:
    get:
      description: get a specific server's specific report
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: reportid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: return a specific server's specific report
          content:
            text/plain:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/ReportInfo'
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/ReportInfo'
    delete:
      description: delete a specific server's specific report
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: reportid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success delete a specific server's specific report
      security:
        - servermgt_oauth2:
          - write:servers
  /{id}/basevalues:
    get:
      description: get a specific server's all base values
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: return a specific server's all base values
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseValueInfo'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseValueInfo'
  /{id}/newbasevalue:
    get:
      description: get a specific server's new base value page
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: return a specific server's new empty base value
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseValueInfo'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseValueInfo'
    post:
      description: add a new base value to a specific server
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success add a new base value to a specific server
      security:
        - servermgt_oauth2:
          - write:servers
  /{id}/basevalues/{basevalueid}:
    get:
      description: get a specific server's specific base values
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: basevalueid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: return a specific server's specific base values
          content:
            text/plain:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/BaseValueInfo'
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/BaseValueInfo'
    post:
      description: modify a specific base value to a specific server
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: basevalueid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success modify a specific base value to a specific server
      security:
        - servermgt_oauth2:
          - write:servers
    delete:
      description: delete a specific server's specific base value
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: basevalueid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success delete a specific server's specific base value
      security:
        - servermgt_oauth2:
          - write:servers
  /{id}/ta/{tauuid}/tareports:
    get:
      description: get a specific ta's all reports
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: tauuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: return a specific ta's all reports
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaReportInfo'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaReportInfo'
  /{id}/ta/{tauuid}/tareports/{tareportid}:
    get:
      description: get a specific ta's specific report
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: tauuid
          in: path
          required: true
          schema:
            type: string
        - name: tareportid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: return a specific ta's specific report
          content:
            text/plain:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/TaReportInfo'
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/TaReportInfo'
    delete:
      description: delete a specific ta's specific report
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: tauuid
          in: path
          required: true
          schema:
            type: string
        - name: tareportid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success delete a specific ta's specific report
      security:
        - servermgt_oauth2:
          - write:servers
  /{id}/ta/{tauuid}/tabasevalues:
    get:
      description: get a specific ta's all base values
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: tauuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: return a specific ta's all base values
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaBaseValueInfo'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaBaseValueInfo'
  /{id}/ta/{tauuid}/newtabasevalue:
    get:
      description: get a specific ta's new base value page
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: tauuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: return a specific ta's new empty base value
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaBaseValueInfo'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaBaseValueInfo'
    post:
      description: add a new base value to a specific ta
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: tauuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: success add a new base value to a specific ta
      security:
        - servermgt_oauth2:
          - write:servers
  /{id}/ta/{tauuid}/tabasevalues/{tabasevalueid}:
    get:
      description: get a specific ta's specific base value
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: tauuid
          in: path
          required: true
          schema:
            type: string
        - name: tabasevalueid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: return a specific ta's specific base value
          content:
            text/plain:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/TaBaseValueInfo'
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/TaBaseValueInfo'
    post:
      description: modify a specific base value to a specific ta
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: tauuid
          in: path
          required: true
          schema:
            type: string
        - name: tabasevalueid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success modify a specific base value to a specific ta
      security:
        - servermgt_oauth2:
          - write:servers
    delete:
      description: delete a specific ta's specific base value
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: tauuid
          in: path
          required: true
          schema:
            type: string
        - name: tabasevalueid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success delete a specific ta's specific base value
      security:
        - servermgt_oauth2:
          - write:servers
  /{id}/ta/{tauuid}/status:
    get:
      summary: Return the trust status for a specific TA of a given client
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: tauuid
          in: path
          required: true
          schema:
            type: string
      response:
        '200':
          description: return trust status of a specific ta
          content:
            text/plain:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/TrustStatus'
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/TrustStatus'
      security:
        - servermgt_oauth2:
          - write:servers  
  /version:
    get:
      description: get the current version of the rest api
      responses:
        '200':
          description: success return a version string
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
  /login:
    get:
      description: login as a admin user
      responses:
        '200':
          description: success login
  /config:
    get:
      description: get the current configuration of ras
      responses:
        '200':
          description: success return the configuration of ras
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
    post:
      description: modify a new configuration of ras
      responses:
        '200':
          description: success modify the new configuration of ras
      security:
        - servermgt_oauth2:
          - write:servers
  /{id}/container/status:
    get:
      summary: Return a list of trust status for all containers of a given client
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      response:
        '200':
          description: A JSON array of container trust status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrustStatus'
      security:
        - servermgt_oauth2:
          - write:servers
  /{id}/device/status:
    get:
      summary: Return a list of trust status for all devices of a given client
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      response:
        '200':
          description: A JSON array of device trust status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrustStatus'
      security:
        - servermgt_oauth2:
          - write:servers
components:
  schemas:
    ServerInfo:
      type: object
      required:
        - id
        - regtime
        - registered
        - online
        - trusted
        - isautoupdate
      properties:
        id:
          type: integer
          format: int64
        regtime:
          type: string
        registered:           
          type: boolean           
          default: false
        online:
          type: boolean
          default: false
        trusted:
          type: boolean
          default: false
        isautoupdate:
          type: boolean
          default: false
    ReportInfo:
      type: object
      required:
        - id
        - createtime
        - validated
        - trusted
        - quoted
        - signature
        - pcrlog
        - bioslog
        - imalog
      properties:
        id:
          type: integer
          format: int64
        createtime:
          type: string
        validated:
          type: boolean
          default: false
        trusted:
          type: boolean
          default: false
        quoted:
          type: string
        signature:
          type: string
        pcrlog:
          type: string
        bioslog:
          type: string
        imalog:
          type: string
    BaseValueInfo:
      type: object
      required:
        - id
        - clientid
        - uuid
        - basetype
        - createtime
        - name
        - pcr
        - bios
        - ima
        - enabled
      properties:
        id:
          type: integer
          format: int64
        clientid:
          type: integer
          format: int64
        uuid:
          type: string
        basetype:
          type: string
        createtime:
          type: string
        name:
          type: string
        pcr:
          type: string
        bios:
          type: string
        ima:
          type: string
        enabled:
          type: boolean     
    TrustStatus:
      type: string
      default: unknown
      enum:
      - unknown
      - untrusted
      - trusted
    TaReportInfo:
      type: object
      required:
        - id
        - uuid
        - createtime
        - validated
        - trusted
        - value
      properties:
        id:
          type: integer
          format: int64
        uuid:
          type: string
        createtime:
          type: string
        validated:
          type: boolean
          default: false
        trusted:
          type: boolean
          default: false
        value:
          type: string
    TaBaseValueInfo:
      type: object
      required:
        - id
        - clientid
        - uuid
        - createtime
        - name
        - valueinfo
        - enabled
      properties:
        id:
          type: integer
          format: int64
        clientid:
          type: integer
          format: int64
        uuid:
          type: string
        createtime:
          type: string
        name:
          type: string
        valueinfo:
          type: string
        enabled:
          type: boolean
  securitySchemes:
    servermgt_http:
      description: http basic authentication to remote attestation server
      type: http
      scheme: basic
    servermgt_oauth2:
      description: oauth2 authentication to remote attestation server
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://localhost:5096/authorization
          tokenUrl: http://localhost:5096/token
          scopes:
            write:servers: modify target server configurations
            read:servers: read server informations
            write:config: modify ras configuration
